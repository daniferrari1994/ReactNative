{"version":3,"sources":["Firebase/config.js","Context/ShopProvider.js","Screens/Auth.js","Styles/Global.js","Components/CartItem.js","Screens/Cart.js","Navigation/Stacks/CartStack.js","Components/DetailOrder.js","Components/OrderItem.js","Screens/Orders.js","Navigation/Stacks/OrdersStack.js","Components/GridItem.js","Screens/Categories.js","Screens/Details.js","Components/PersonajeItem.js","Screens/Products.js","Navigation/Stacks/ShopStack.js","Navigation/Tabs/index.js","Navigation/index.js","App.js","assets/empty.png","assets/rick.png"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","auth","initializeAuth","persistence","getReactNativePersistence","AsyncStorage","Shop","createContext","ShopProvider","children","useState","products","setProducts","categories","setCategories","cart","setCart","orders","setOrders","useEffect","a","async","queryCollection","query","collection","queryCategoriesCollection","queryOrdersCollection","getDocs","querySnapshot","queryCategoriesSnapshot","queryOrdersSnapshot","productos","categorias","forEach","doc","producto","id","data","push","category","order","sumaTotal","reduce","sum","i","price","count","Provider","value","addCart","productoABuscar","find","elemento","isInCart","cartFiltrado","filter","removeItem","generateOrder","nombre","direccion","user","currentUser","orderGenerada","buyer","email","items","total","createAt","Date","toLocaleString","batch","writeBatch","outOfStock","prod","getDoc","then","documentSnapshot","stock","update","length","addDoc","commit","Alert","alert","text","onPress","catch","err","console","log","message","mensaje","name","conteoItems","acc","item","styles","StyleSheet","create","container","paddingVertical","paddingHorizontal","backgroundColor","screen","flex","justifyContent","alignItems","width","maxWidth","padding","margin","borderColor","borderWidth","borderRadius","label","fontSize","input","height","title","marginBottom","textAlign","prompt","promptTouch","promptTouchContainer","color","promptMessage","marginTop","promptButton","Auth","setEmail","password","setPassword","loginView","setLoginView","error","setError","KeyboardAvoidingView","behavior","style","View","Text","TextInput","required","keyboardType","onChangeText","placeholder","errorText","secureTextEntry","TouchableOpacity","signInWithEmailAndPassword","userCredential","errorCode","code","errorMessage","createUserWithEmailAndPassword","CartItem","onDelete","details","toFixed","eliminar","Ionicons","size","flexDirection","Cart","navigation","useContext","suma","setSuma","modalVisible","setModalVisible","setNombre","setDireccion","eliminarItem","FlatList","keyExtractor","toString","renderItem","compra","importe","Button","centeredView","Image","image","source","require","navigate","Modal","animationType","transparent","visible","onRequestClose","modalView","botones","alignSelf","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","CartStack","Stack","createNativeStackNavigator","Navigator","Screen","component","options","DetailOrder","info","uri","detail","status","gender","OrderItem","maxHeight","Orders","ordersFilter","setOrdersFilter","ActivityIndicator","OrderStack","GridItem","onSelected","fontWeight","Categories","handleProducts","categoryID","numColumns","marginHorizontal","Details","route","params","goBack","PersonajeItem","Products","productFilter","setProductFilter","product","species","handleDetail","ShopStack","handleSignOut","signOut","initialRouteName","screenOptions","headerRight","props","Tab","createBottomTabNavigator","TabNavigator","cantidadTotal","setCantidadTotal","headerShown","tabBarStyles","tabBar","tabBarIcon","focused","IconBadge","MainElement","BadgeElement","IconBadgeStyle","position","left","Hidden","heigth","bottom","right","MainNavigator","setUser","onAuthStateChanged","uid","NavigationContainer","App","LogBox","ignoreLogs","module","exports"],"mappings":"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","file":"static/js/app.93ba371f.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { initializeAuth } from \"firebase/auth\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Solución async storage\r\nimport { getReactNativePersistence } from 'firebase/auth/react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyApAnw6aC2cscprUQ3cc92vn9eY5LopwZY\",\r\n  authDomain: \"e-commerce-gosch.firebaseapp.com\",\r\n  projectId: \"e-commerce-gosch\",\r\n  storageBucket: \"e-commerce-gosch.appspot.com\",\r\n  messagingSenderId: \"236340394923\",\r\n  appId: \"1:236340394923:web:9e06cfd498cd14171e30ee\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const db = getFirestore(app);\r\nexport const auth = initializeAuth(app, {\r\n  persistence: getReactNativePersistence(AsyncStorage),\r\n});\r\n","import React, { createContext, useEffect, useState } from 'react';\r\nimport { collection, getDocs, query, addDoc, doc, getDoc, writeBatch } from \"firebase/firestore\";\r\nimport { auth, db } from \"../Firebase/config\";\r\nimport { Alert } from \"react-native\";\r\n\r\nexport const Shop = createContext();\r\n\r\nconst ShopProvider = ({ children }) => {\r\n\r\n    const [products, setProducts] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [cart, setCart] = useState([]);\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        (async () => {\r\n            const queryCollection = query(collection(db, \"productos\"));\r\n            const queryCategoriesCollection = query(collection(db, \"categories\"));\r\n            const queryOrdersCollection = query(collection(db, \"orders\"));\r\n            const querySnapshot = await getDocs(queryCollection);\r\n            const queryCategoriesSnapshot = await getDocs(queryCategoriesCollection);\r\n            const queryOrdersSnapshot = await getDocs(queryOrdersCollection);\r\n            const productos = [];\r\n            const categorias = [];\r\n            const orders = [];\r\n            querySnapshot.forEach((doc) => {\r\n                const producto = { id: doc.id, ...doc.data() };\r\n                productos.push(producto);\r\n            })\r\n            queryCategoriesSnapshot.forEach((doc) => {\r\n                const category = { id: doc.id, ...doc.data() };\r\n                categorias.push(category);\r\n            })\r\n            queryOrdersSnapshot.forEach((doc) => {\r\n                const order = { id: doc.id, ...doc.data() };\r\n                orders.push(order);\r\n            })\r\n            setProducts([...productos]);\r\n            setCategories([...categorias]);\r\n            setOrders([...orders]);\r\n        })()\r\n\r\n    }, [])\r\n\r\n    //Función auxiliar que me determina si el producto está en carrito\r\n    const isInCart = (producto) => {\r\n        return cart.find(elemento => elemento.id === producto.id);\r\n    }\r\n\r\n    const addCart = (producto, count) => {\r\n        const productoABuscar = isInCart(producto);\r\n        if (productoABuscar) {\r\n            productoABuscar.count += count;\r\n            const cartFiltrado = cart.filter(elemento => elemento.id !== producto.id);\r\n            cartFiltrado.push(productoABuscar);\r\n            setCart(cartFiltrado);\r\n        } else {\r\n            setCart([...cart, { ...producto, count }]);\r\n        }\r\n        sumaTotal();\r\n    }\r\n\r\n    const sumaTotal = () => {\r\n        return cart.reduce((sum, i) => sum += (i.price * i.count), 0);\r\n    }\r\n\r\n    const removeItem = (id) => {\r\n        const cartFiltrado = cart.filter(elemento => elemento.id !== id);\r\n        setCart(cartFiltrado);\r\n    }\r\n\r\n    const conteoItems = () => {\r\n        const suma = cart.reduce((acc, item) => acc += (item.count), 0)\r\n        return suma;\r\n    }\r\n\r\n    const clear = () => {\r\n        setCart([]);\r\n    }\r\n\r\n    const generateOrder = async (nombre, direccion) => {\r\n        const user = auth.currentUser;\r\n        const orderGenerada = {\r\n            buyer: {\r\n                email: user.email,\r\n                nombre: nombre,\r\n                direccion: direccion\r\n            },\r\n            items: cart,\r\n            total: sumaTotal(),\r\n            createAt: new Date().toLocaleString()\r\n        };\r\n\r\n        //Primer paso: abrir un batch\r\n        const batch = writeBatch(db);\r\n\r\n        //Array auxiliar que me define si hay productos fuera de stock\r\n        const outOfStock = [];\r\n\r\n        cart.forEach((prod) => {\r\n            getDoc(doc(db, 'productos', prod.id))\r\n                .then((documentSnapshot) => {\r\n                    if (documentSnapshot.data().stock >= prod.count) {\r\n                        batch.update(doc(db, 'productos', documentSnapshot.id), {\r\n                            stock: documentSnapshot.data().stock - prod.count\r\n                        })\r\n                    } else {\r\n                        outOfStock.push({ id: documentSnapshot.id, ...documentSnapshot.data() })\r\n                    }\r\n\r\n                    if (outOfStock.length === 0) {\r\n                        addDoc(collection(db, 'orders'), orderGenerada).then(({ id }) => {\r\n                            batch.commit().then(() => {\r\n                                Alert.alert('Operación exitosa',`Se genero la order con id ${id}`,\r\n                                    [{ text: \"OK\", onPress: () => clear() }])\r\n                            })\r\n                        }).catch((err) => {\r\n                            console.log(`Error: ${err.message}`);\r\n                        })\r\n                    } else {\r\n                        let mensaje = ''\r\n                        for (const producto of outOfStock) {\r\n                            mensaje += `${producto.name}`;\r\n                        }\r\n                        Alert.alert('Operación fallida', `Productos fuera de stock ${mensaje}`);\r\n                    }\r\n                })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Shop.Provider value={{ products, categories, addCart, sumaTotal, cart, removeItem, generateOrder, orders, conteoItems }}>\r\n            {children}\r\n        </Shop.Provider>\r\n    )\r\n}\r\n\r\nexport default ShopProvider;","import React, { useState } from 'react';\r\nimport { Text, StyleSheet, View, TouchableOpacity, TextInput, KeyboardAvoidingView } from 'react-native';\r\nimport { colors } from '../Styles/Global';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from '../Firebase/config';\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loginView, setLoginView] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleSignup = () => {\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                // Signed in \r\n                const user = userCredential.user;\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                console.log(errorCode, errorMessage);\r\n                setError(\"Ya se encuentra un usuario regristrado con ese mail\");\r\n                setEmail(\"\");\r\n                setPassword(\"\");\r\n            });\r\n    }\r\n    const handleLogin = () => {\r\n        if (email !== \"\" && password != \"\") {\r\n            signInWithEmailAndPassword(auth, email, password)\r\n                .then((userCredential) => {\r\n                    // Signed in \r\n                    const user = userCredential.user;\r\n                    // ...\r\n                })\r\n                .catch((error) => {\r\n                    const errorCode = error.code;\r\n                    const errorMessage = error.message;\r\n                    console.log(errorCode, errorMessage);\r\n                    setError(\"Usuario o password es incorrecto\");\r\n                    setEmail(\"\");\r\n                    setPassword(\"\");\r\n                });\r\n        }\r\n    }\r\n    return (\r\n        <KeyboardAvoidingView\r\n            behavior='height'\r\n            style={styles.screen}>\r\n            <View style={styles.container}>\r\n                <View>\r\n                    <Text style={styles.title}> {loginView ? 'Ingreso' : 'Registro'}</Text>\r\n                    <Text style={styles.label}>Email</Text>\r\n                    <TextInput\r\n                        required\r\n                        style={styles.input}\r\n                        value={email}\r\n                        keyboardType='email-address'\r\n                        onChangeText={setEmail}\r\n                        placeholder=\"Ingrese su email\"\r\n                        errorText=\"Por favor ingrese su email\"\r\n                    ></TextInput>\r\n                    <Text style={styles.label}>Clave</Text>\r\n                    <TextInput\r\n                        required\r\n                        style={styles.input}\r\n                        secureTextEntry={true}\r\n                        value={password}\r\n                        onChangeText={setPassword}\r\n                        placeholder=\"Ingrese su clave\"\r\n                        errorText=\"Por favor ingrese su clave\"\r\n                    ></TextInput>\r\n                    {error && <Text style={styles.message} >{error}</Text>}\r\n                    <View style={styles.prompt}>\r\n                        {loginView ?\r\n                            <TouchableOpacity onPress={handleLogin} style={styles.promptTouch}>\r\n                                <Text style={styles.promptTouchContainer}>Ingresar</Text>\r\n                            </TouchableOpacity>\r\n                            :\r\n                            <TouchableOpacity onPress={handleSignup} style={styles.promptTouch}>\r\n                                <Text style={styles.promptTouchContainer}>Regístrarme</Text>\r\n                            </TouchableOpacity>}\r\n                        <View style={styles.prompt}>\r\n                            <Text style={styles.promptMessage}>{loginView ? '¿No tenés usuario?' : '¿Ya tenés usuario?'}</Text>\r\n                            <TouchableOpacity onPress={() => {setLoginView(!loginView); setError(null)}}>\r\n                                <Text style={styles.promptButton}>\r\n                                    {loginView ? 'Regístrate' : 'Ingresá'}\r\n                                </Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    container: {\r\n        width: '90%',\r\n        maxWidth: 600,\r\n        padding: 12,\r\n        margin: 12,\r\n        borderColor: \"#61dafb\",\r\n        borderWidth: 1,\r\n        borderRadius: 10\r\n    },\r\n    label: {\r\n        fontSize: 16,\r\n        margin: 12\r\n    },\r\n    input: {\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        borderColor: \"#61dafb\",\r\n        padding: 10\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        marginBottom: 18,\r\n        textAlign: 'center'\r\n    },\r\n    prompt: {\r\n        alignItems: 'center',\r\n        marginBottom: 10\r\n    },\r\n    promptTouch: {\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#61dafb\",\r\n        borderWidth: 1,\r\n        borderColor: \"#e6e600\",\r\n        padding: 10\r\n    },\r\n    promptTouchContainer: {\r\n        alignItems: \"center\",\r\n        padding: 7,\r\n        fontSize: 18,\r\n        color: 'black'\r\n    },\r\n    promptMessage: {\r\n        fontSize: 16,\r\n        color: '#333',\r\n        marginTop: 10\r\n    },\r\n    promptButton: {\r\n        fontSize: 16,\r\n        color: '#61dafb'\r\n    },\r\n    message: {\r\n        fontSize: 12,\r\n        margin: 15,\r\n        color: \"red\"\r\n    }\r\n});\r\n\r\n\r\nexport default Auth;","import { StyleSheet } from \"react-native\";\r\n\r\nexport const colors = {\r\n    darkBlue: '#006d77',\r\n    lightBlue: '#a3c4f3',\r\n    lightViolet: '#cfbaf0',\r\n    light: '#edf6f9',\r\n    brown: '#e29578',\r\n    lightBrown: '#ffddd2',\r\n    primary: '#61dafb'\r\n}\r\n\r\nexport default StyleSheet.create({\r\n    container: {\r\n      paddingVertical: 25,\r\n      paddingHorizontal: 10,\r\n      backgroundColor: colors.light\r\n    }\r\n  });","import React from 'react'\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nconst CartItem = ({ item, onDelete }) => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <View>\r\n                <Text style={styles.title}>\r\n                    {item.name}\r\n                </Text>\r\n                <Text style={styles.details}>\r\n                    Precio: $ {item.price.toFixed(2)}\r\n                </Text>\r\n            </View>\r\n            <View style={styles.eliminar}>\r\n                <Ionicons onPress={() => onDelete(item)} name=\"ios-trash-bin\" size={24} color=\"black\" />\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default CartItem;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 20,\r\n        flexDirection: \"row\",\r\n        margin: 10,\r\n        borderRadius: 5,\r\n        backgroundColor: \"#61dafb\",\r\n        justifyContent: 'space-between',\r\n        borderWidth: 2,\r\n        borderColor: \"#e6e600\"\r\n    },\r\n    title: {\r\n        fontSize: 20\r\n    },\r\n    details: {\r\n        fontSize: 10\r\n    },\r\n    eliminar: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n});","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Button, FlatList, Modal, StyleSheet, Text, View, TextInput, Image } from 'react-native';\r\nimport CartItem from '../Components/CartItem';\r\nimport { Shop } from \"../Context/ShopProvider\";\r\n\r\nconst Cart = ({ navigation}) => {\r\n  const { cart, removeItem, sumaTotal, generateOrder } = useContext(Shop);\r\n\r\n  const [suma, setSuma] = useState();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [nombre, setNombre] = useState(\"\");\r\n  const [direccion, setDireccion] = useState(\"\");\r\n\r\n  const renderItemCart = ({ item }) => <CartItem item={item} onDelete={eliminarItem}></CartItem>\r\n\r\n  useEffect(() => {\r\n    setSuma(sumaTotal())\r\n  }, [sumaTotal])\r\n\r\n  const eliminarItem = (item) => {\r\n    removeItem(item.id);\r\n  }\r\n\r\n  const cancelar = () => {\r\n    setModalVisible(false);\r\n    setNombre(\"\");\r\n    setDireccion(\"\");\r\n  }\r\n\r\n  const confirmar = () => {\r\n    generateOrder(nombre, direccion);\r\n    setModalVisible(false);\r\n    setNombre(\"\");\r\n    setDireccion(\"\");\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      {cart.length !== 0 ?\r\n        <>\r\n          <View>\r\n            <FlatList\r\n              data={cart}\r\n              keyExtractor={(item) => item.id.toString()}\r\n              renderItem={renderItemCart}\r\n            ></FlatList>\r\n          </View>\r\n          <View style={styles.compra}>\r\n            <Text style={styles.importe}>Total: {suma} </Text>\r\n            <Button color='#61dafb' title=\"Finalizar compra\" onPress={() => setModalVisible(true)} />\r\n          </View>\r\n        </> :\r\n        <View style={styles.centeredView}>\r\n          <Image style={styles.image} source={require('../assets/empty.png')} />\r\n          <Text style={styles.title}>Tu carrito está ahora mismo vacío</Text>\r\n          <Button color=\"#61dafb\" title=\"Ir a la tienda\" onPress={() => navigation.navigate('Categories')}></Button>\r\n        </View>\r\n      }\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.title}>¿Quieres confirmar la compra?</Text>\r\n            <Text style={styles.details}>Ingrese los siguientes datos</Text>\r\n            <View>\r\n              <TextInput style={styles.input}\r\n                placeholder='Ingresar nombre'\r\n                onChangeText={setNombre}\r\n                value={nombre}\r\n              />\r\n              <TextInput style={styles.input}\r\n                placeholder='Ingresar direccion'\r\n                onChangeText={setDireccion}\r\n                value={direccion}\r\n              />\r\n            </View>\r\n            <View style={styles.botones}>\r\n              <Button color=\"#61dafb\" title=\"Cancelar\" onPress={() => cancelar()}></Button>\r\n              <Button color=\"#61dafb\" title=\"Confirmar\" onPress={() => confirmar()}></Button>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal >\r\n    </View >\r\n  )\r\n}\r\n\r\nexport default Cart\r\n\r\nconst styles = StyleSheet.create({\r\n  importe: {\r\n    fontSize: 20,\r\n    marginBottom: 20,\r\n    alignSelf: 'flex-end'\r\n  },\r\n  compra: {\r\n    margin: 15\r\n  },\r\n  centeredView: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22,\r\n    height: 450\r\n  },\r\n  modalView: {\r\n    margin: 10,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5\r\n  },\r\n  botones: {\r\n    marginTop: 10,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  title: {\r\n    fontSize: 20\r\n  },\r\n  details: {\r\n    fontSize: 14,\r\n    marginBottom: 10\r\n  },\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10\r\n  },\r\n  image: {\r\n    width:400, \r\n    height:300,\r\n    justifyContent: 'center', \r\n    marginBottom:15\r\n  }\r\n\r\n});","import React from 'react'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport Cart from '../../Screens/Cart';\r\n\r\nconst CartStack = () => {\r\n\r\n    const Stack = createNativeStackNavigator();\r\n\r\n    return (\r\n        <Stack.Navigator>\r\n            <Stack.Screen\r\n                name=\"Cart\"\r\n                component={Cart}\r\n                options={{\r\n                    title: \"Carrito\"\r\n                }}\r\n            />\r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\nexport default CartStack","import React from 'react'\r\nimport { View, Text, StyleSheet, Image } from 'react-native';\r\n\r\nconst DetailOrder = ({ item }) => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.info}>\r\n                <Text style={styles.title}>\r\n                    {item.name}\r\n                </Text>\r\n                <Image\r\n                    style={styles.image}\r\n                    source={{\r\n                        uri: item.image,\r\n                    }}\r\n                />\r\n                <Text style={styles.detail}>\r\n                    Estado: {item.status}\r\n                </Text>\r\n                <Text style={styles.detail}>\r\n                    Sexo: {item.gender}\r\n                </Text>\r\n                <Text style={styles.detail}>\r\n                    Precio: {item.price.toFixed(2)}\r\n                </Text>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default DetailOrder;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        borderWidth: 2,\r\n        borderColor: \"#e6e600\",\r\n        marginBottom: 10\r\n    },\r\n    info: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    detail: {\r\n        fontSize: 10,\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n    },\r\n    image: {\r\n        width: 100,\r\n        height: 50,\r\n    }\r\n});","import React, { useState } from 'react'\r\nimport { View, Text, StyleSheet, Modal, FlatList, Button } from 'react-native';\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport DetailOrder from './DetailOrder';\r\n\r\nconst OrderItem = ({ item }) => {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const renderDetailOrder = ({ item }) => <DetailOrder item={item}></DetailOrder>\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Modal\r\n                animationType=\"slide\"\r\n                transparent={true}\r\n                visible={modalVisible}\r\n                onRequestClose={() => setModalVisible(false)}\r\n            >\r\n                <View style={styles.centeredView}>\r\n                    <View style={styles.modalView}>\r\n                        <Text style={styles.title}>\r\n                            Personajes\r\n                        </Text>\r\n                        <FlatList\r\n                            data={item.items}\r\n                            keyExtractor={(item) => item.id.toString()}\r\n                            renderItem={renderDetailOrder}\r\n                        ></FlatList>\r\n                        <View>\r\n                            <Button color='#61dafb' title=\"Cerrar\" onPress={() => setModalVisible(false)}></Button>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n            <View>\r\n                <Text style={styles.details}>\r\n                    {item.buyer.nombre}\r\n                </Text>\r\n                <Text style={styles.details}>\r\n                    {item.buyer.direccion}\r\n                </Text>\r\n                <Text style={styles.details}>\r\n                    {item.createAt}\r\n                </Text>\r\n                <Text style={styles.details}>\r\n                    $ {item.total.toFixed(2)}\r\n                </Text>\r\n            </View>\r\n            <View style={styles.eliminar}>\r\n                <Ionicons onPress={() => setModalVisible(true)} name=\"ios-information-circle\" size={24} color=\"black\" />\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default OrderItem;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 20,\r\n        flexDirection: \"row\",\r\n        margin: 10,\r\n        borderRadius: 5,\r\n        backgroundColor: \"#61dafb\",\r\n        borderWidth: 2,\r\n        borderColor: \"#e6e600\",\r\n        justifyContent: 'space-between'\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        marginBottom: 3\r\n    },\r\n    details: {\r\n        fontSize: 10\r\n    },\r\n    eliminar: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    centeredView: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: 22,\r\n        height: 'auto',\r\n        maxHeight: 420\r\n    },\r\n    modalView: {\r\n        margin: 10,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: \"center\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5\r\n    }\r\n});","import { View, FlatList, ActivityIndicator} from 'react-native'\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { Shop } from \"../Context/ShopProvider\";\r\nimport OrderItem from '../Components/OrderItem';\r\nimport { auth } from '../Firebase/config';\r\n\r\nconst Orders = () => {\r\n  const { orders } = useContext(Shop);\r\n  const [ordersFilter, setOrdersFilter] = useState([]);\r\n\r\n  const renderItemOrder = ({ item }) => <OrderItem item={item}></OrderItem>\r\n\r\n  useEffect(() => {\r\n\r\n    (async () => {\r\n      const user = auth.currentUser;\r\n      const ordersFilter = orders.filter(order => order.buyer.email === user.email);\r\n      setOrdersFilter(ordersFilter);\r\n    })()\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <View>\r\n      <View>\r\n      {ordersFilter.length !== 0 ? \r\n        <FlatList\r\n          data={ordersFilter}\r\n          keyExtractor={(item) => item.id.toString()}\r\n          renderItem={renderItemOrder}\r\n        ></FlatList>\r\n        :\r\n        <ActivityIndicator size={\"large\"} color={\"black\"}/>\r\n      }\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Orders;","import React from 'react'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport Orders from '../../Screens/Orders';\r\n\r\nconst OrderStack = () => {\r\n\r\n    const Stack = createNativeStackNavigator();\r\n\r\n    return (\r\n        <Stack.Navigator>\r\n            <Stack.Screen\r\n                name=\"Orders\"\r\n                component={Orders}\r\n                options={{\r\n                    title: \"Pedidos\"\r\n                }}\r\n            />\r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\nexport default OrderStack","import React from 'react'\r\nimport { Text, TouchableOpacity, StyleSheet, View } from 'react-native';\r\n\r\nconst GridItem = ({ item, onSelected }) => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <TouchableOpacity onPress={() => onSelected(item)}>\r\n                <View>\r\n                    <Text style={styles.title}>\r\n                        {item.title}\r\n                    </Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default GridItem;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 5,\r\n        borderRadius: 5,\r\n        backgroundColor: \"#eaeaea\"\r\n    },\r\n    title: {\r\n        marginTop: 16,\r\n        paddingVertical: 8,\r\n        borderWidth: 4,\r\n        borderColor: \"#e6e600\",\r\n        borderRadius: 6,\r\n        backgroundColor: \"#61dafb\",\r\n        color: \"#20232a\",\r\n        textAlign: \"center\",\r\n        fontSize: 30,\r\n        fontWeight: \"bold\"\r\n    }\r\n});","import { Image, View, FlatList, ActivityIndicator, StyleSheet } from 'react-native'\r\nimport React, { useContext } from \"react\";\r\nimport GridItem from '../Components/GridItem';\r\nimport { Shop } from \"../Context/ShopProvider\";\r\n\r\nconst Categories = ({ navigation }) => {\r\n  const {categories} = useContext(Shop);\r\n\r\n  const handleProducts = (categoryID) => {\r\n      navigation.navigate('Products', {\r\n          category: categoryID\r\n      })\r\n  }\r\n\r\n  const fnRenderCategoria = ({item}) => {\r\n    return (<GridItem item={item} onSelected={handleProducts}/>)\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <Image style={styles.image} source={require('../assets/rick.png')}/>\r\n      {categories.length !== 0 ? \r\n        <FlatList\r\n          data={categories}\r\n          renderItem={fnRenderCategoria}\r\n          keyExtractor={item => item.id}\r\n          numColumns={2}\r\n        />\r\n        :\r\n        <ActivityIndicator size={\"large\"} color={\"black\"}/>\r\n      }\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    width:400, \r\n    height:160, \r\n    marginBottom:15\r\n  }\r\n})\r\n\r\nexport default Categories;\r\n","import React, { useContext } from \"react\";\r\nimport { Text, StyleSheet, View, Image, Button } from 'react-native';\r\nimport { Shop } from \"../Context/ShopProvider\";\r\n\r\nconst Details = ({ navigation, route }) => {\r\n    const { addCart } = useContext(Shop);\r\n\r\n    const item = route.params.detail;\r\n    \r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.info}>\r\n                <Text style={styles.title}>\r\n                    {item.name}\r\n                </Text>\r\n                <Image\r\n                    style={styles.image}\r\n                    source={{\r\n                        uri: item.image,\r\n                    }}\r\n                />\r\n                <Text style={styles.detail}>\r\n                    Estado: {item.status}\r\n                </Text>\r\n                <Text style={styles.detail}>\r\n                    Sexo: {item.gender}\r\n                </Text>\r\n                <Text style={styles.detail}>\r\n                    Stock: {item.stock}\r\n                </Text>\r\n                <Text style={styles.detail}>\r\n                    Precio: {item.price}\r\n                </Text>\r\n\r\n            </View>\r\n            <View style={styles.cart}>\r\n                <Button color=\"#61dafb\" title=\"Volver\" onPress={() => navigation.goBack()}></Button>\r\n                <Button color=\"#61dafb\" title=\"Agregar al carrito\" onPress={() => addCart(item, 1)}></Button>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        backgroundColor: \"#eaeaea\"\r\n    },\r\n    info: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    detail: {\r\n        fontSize: 20,\r\n        marginBottom: 20\r\n    },\r\n    title: {\r\n        fontSize: 30,\r\n        marginBottom: 30\r\n    },\r\n    image: {\r\n        width: 250,\r\n        height: 150,\r\n        marginBottom: 20\r\n    },\r\n    cart: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        marginHorizontal: 70\r\n    }\r\n\r\n});\r\n\r\nexport default Details;","import React from 'react';\r\nimport { Text, TouchableOpacity, StyleSheet, View} from 'react-native';\r\n\r\nconst PersonajeItem = ({ item, onSelected }) => {\r\n    return (\r\n        <TouchableOpacity onPress={() => onSelected(item)}>\r\n            <View style={styles.container}>\r\n                <View>\r\n                    <Text style={styles.title}>\r\n                        {item.name}\r\n                    </Text>\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.details}>\r\n                        Estado: {item.status}\r\n                    </Text>\r\n                    <Text style={styles.details}>\r\n                        Sexo: {item.gender}\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nexport default PersonajeItem;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 20,\r\n        margin: 10,\r\n        borderRadius: 5,\r\n        backgroundColor: \"#61dafb\",\r\n        borderWidth: 2,\r\n        borderColor: \"#e6e600\"\r\n    },\r\n    title: {\r\n        fontSize: 20\r\n    },\r\n    details: {\r\n        fontSize: 10\r\n    }\r\n});","import { useEffect, useState, useContext } from 'react';\r\nimport {View, ActivityIndicator, FlatList} from 'react-native';\r\nimport PersonajeItem from '../Components/PersonajeItem';\r\nimport { Shop } from \"../Context/ShopProvider\";\r\n\r\nconst Products = ({navigation, route}) => {\r\n  const {category} = route.params;\r\n\r\n  const {products} = useContext(Shop);\r\n\r\n  const [productFilter, setProductFilter] = useState([]);\r\n\r\n  useEffect(()=> {\r\n\r\n    (async ()=>{\r\n      const productFilter = products.filter(product => product.species === category.title)\r\n      setProductFilter(productFilter);\r\n    })()\r\n\r\n  }, [category])\r\n\r\n  const handleDetail = (item) => {\r\n    navigation.navigate('Details', {\r\n      title: item.name,\r\n      detail: item,\r\n    })\r\n  }\r\n\r\n  const fnRenderProduct = ({item}) => {\r\n    return (<PersonajeItem item={item} onSelected={handleDetail}/>)\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      {productFilter.length !== 0 ? \r\n        <FlatList\r\n          data={productFilter}\r\n          renderItem={fnRenderProduct}\r\n          keyExtractor={item => item.id}\r\n        />\r\n        :\r\n        <ActivityIndicator size={\"large\"} color={\"black\"}/>\r\n      }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Products\r\n","import { createNativeStackNavigator } from \"@react-navigation/native-stack\"\r\nimport { Text, TouchableOpacity } from 'react-native';\r\nimport { auth } from \"../../Firebase/config\";\r\nimport Categories from \"../../Screens/Categories\";\r\nimport Details from \"../../Screens/Details\";\r\nimport Products from \"../../Screens/Products\";\r\nimport { signOut } from 'firebase/auth';\r\n\r\nconst ShopStack = () => {\r\n\r\n    const Stack = createNativeStackNavigator();\r\n\r\n    const handleSignOut = () => {\r\n        signOut(auth).then(() => {\r\n          // Sign-out successful.\r\n        }).catch((error) => {\r\n          // An error happened.\r\n        });\r\n      }\r\n\r\n    return (\r\n        <Stack.Navigator\r\n            initialRouteName=\"Categories\"\r\n            screenOptions={{\r\n                headerRight:\r\n                (props) => \r\n                <TouchableOpacity onPress={handleSignOut}>\r\n                    <Text>Cerrar sesión</Text>\r\n                </TouchableOpacity>\r\n            }\r\n            }\r\n        >\r\n            <Stack.Screen\r\n                name=\"Categories\"\r\n                component={Categories}\r\n                options={{ title: \"Categorias\" }}\r\n            />\r\n            <Stack.Screen\r\n                name=\"Products\"\r\n                component={Products}\r\n                options={({ route }) => ({ title: route.params.category.title })} />\r\n            <Stack.Screen\r\n                name=\"Details\"\r\n                component={Details}\r\n                options={({ route }) => ({ title: route.params.title })} />\r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\nexport default ShopStack;","import { Ionicons } from \"@expo/vector-icons\";\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport React, {useContext, useEffect, useState} from 'react';\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport IconBadge from 'react-native-icon-badge';\r\nimport { Shop } from \"../../Context/ShopProvider\";\r\nimport CartStack from '../Stacks/CartStack';\r\nimport OrderStack from '../Stacks/OrdersStack';\r\nimport ShopStack from '../Stacks/ShopStack';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst TabNavigator = () => {\r\n    const { conteoItems } = useContext(Shop);\r\n    const [cantidadTotal, setCantidadTotal] = useState(0);\r\n  \r\n    useEffect(() => {\r\n      setCantidadTotal(conteoItems())\r\n    }, [conteoItems])\r\n\r\n    return (\r\n        <Tab.Navigator\r\n            screenOptions={{\r\n                headerShown: false,\r\n                tabBarStyles: styles.tabBar\r\n            }}\r\n        >\r\n            <Tab.Screen name=\"ShopStack\" component={ShopStack}\r\n                options={{\r\n                    title: \"Tienda\",\r\n                    tabBarIcon: ({ focused }) => (\r\n                        <Ionicons name=\"ios-home\" size={24} color=\"black\" />\r\n                    )\r\n                }}\r\n            />\r\n            <Tab.Screen name=\"CartStack\" component={CartStack}\r\n                options={{\r\n                    title: \"Carrito\",\r\n                    tabBarIcon: ({ focused }) => (\r\n                        <View style={{flexDirection: 'row', alignItems: 'center', justifyContent: 'center',}}>\r\n                            <IconBadge\r\n                                MainElement={\r\n                                    <Ionicons name=\"ios-cart\" size={24} color=\"black\" />\r\n                                }\r\n                                BadgeElement={\r\n                                    <Text style={{ color: '#FFFFFF' }}>{cantidadTotal}</Text>\r\n                                }\r\n                                IconBadgeStyle={\r\n                                    {\r\n                                        position:'absolute',\r\n                                        left: 20\r\n                                    }\r\n                                }\r\n                                Hidden={cantidadTotal == 0}\r\n                            />\r\n                        </View>\r\n                    )\r\n                }}\r\n            />\r\n            <Tab.Screen name=\"OrderStack\" component={OrderStack}\r\n                options={{\r\n                    title: \"Pedidos\",\r\n                    tabBarIcon: ({ focused }) => (\r\n                        <Ionicons name=\"ios-receipt\" size={24} color=\"black\" />\r\n                    )\r\n                }}\r\n            />\r\n        </Tab.Navigator>\r\n    );\r\n}\r\n\r\nexport default TabNavigator\r\n\r\nconst styles = StyleSheet.create({\r\n    tabBar: {\r\n        shadowColor: '#7f5df0',\r\n        shadowOffset: { width: 0, heigth: 10 },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 0.25,\r\n        elevation: 5,\r\n        position: 'absolute',\r\n        bottom: 25,\r\n        left: 20,\r\n        right: 20,\r\n        borderRadius: 15,\r\n        height: 40\r\n    }\r\n});","import { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { useEffect, useState } from 'react';\r\nimport Auth from \"../Screens/Auth\";\r\nimport { auth } from \"../Firebase/config\";\r\nimport TabNavigator from \"./Tabs\";\r\n\r\n\r\nconst MainNavigator = () => {\r\n\r\n    const Stack = createNativeStackNavigator();\r\n\r\n    const [user, setUser] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n                setUser(user)\r\n                // User is signed in, see docs for a list of available properties\r\n                // https://firebase.google.com/docs/reference/js/firebase.User\r\n                const uid = user.uid;\r\n                // ...\r\n            } else {\r\n                setUser(null)\r\n                // User is signed out\r\n                // ...\r\n            }\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <NavigationContainer>\r\n            {user ?\r\n            <TabNavigator></TabNavigator>\r\n            :\r\n            <Auth/>\r\n        }\r\n        </NavigationContainer>\r\n    )\r\n}\r\n\r\nexport default MainNavigator;","import { LogBox } from 'react-native';\r\nimport ShopProvider from './Context/ShopProvider';\r\nimport MainNavigator from './Navigation';\r\n\r\nexport default function App() {\r\n  LogBox.ignoreLogs(['Setting a timer']);\r\n  return (\r\n    <ShopProvider>\r\n      <MainNavigator/>\r\n    </ShopProvider>\r\n  );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/empty.cb0fcde7.png\";","module.exports = __webpack_public_path__ + \"static/media/rick.c93bb22b.png\";"],"sourceRoot":""}